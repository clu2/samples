# Deprecated in v1.16 in favor of apiextensions.k8s.io/v1
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # this is the required format in order for rbac to work for non cluster-admins
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: crds.{TEAM_NAME}.stackathon
spec:
  # this is also the required group name
  # group name to use for REST API: /apis/<group>/<version>
  group: {TEAM_NAME}.stackathon
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
  # either Namespaced or Cluster - we are only support Namespaced
  scope: Namespaced
  names:
    # this needs to match what is above
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: crds
    # singular name to be used as an alias on the CLI and for display
    singular: crd
    # Your resource manifests use this. does not _have_ to match the singular
    # above; rbac will allow any/all Kinds within this api group
    # kind is normally the CamelCased singular type. 
    kind: SomethinNeat
    # shortNames allow shorter string to match your resource on the CLI - optional
    #shortNames:
    #- ct
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          type: object
          properties:
            cronSpec:
              type: string
            image:
              type: string
            replicas:
              type: integer
---
apiVersion: {TEAM_NAME}.stackathon/v1
kind: SomethinNeat
metadata:
  name: test-boi
spec:
  cronSpec: "* * * * *"
  image: "something"
  replicas: 1
---
# sample role creation so users can create service accounts/attach a role
# binding to it - for deploying their custom controller in a pod
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {TEAM_NAME}-crd-role
rules:
- apiGroups: ["{TEAM_NAME}.stackathon"]
  resources: ["*"]
  verbs: ["*"] 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {TEAM_NAME}-crd-role
  namespace: {TEAM_NAME}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {TEAM_NAME}-crd-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: stack-a-thon:{TEAM_NAME}
